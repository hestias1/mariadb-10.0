Description: Revert innodb and xtradb PowerPC synchronization from 10.0.26
  On PowerPC 64 Little Endian we have synchronization problems that causes
  warnings in test cases. The patch reverts these changes from 10.0.26 that
  caused this regression.

  The patch was initially proposed by Sergey Vojtovich, altered slightly to
  have it compile.
  .
  This patch should be removed when upstream provides an adequate fix.
Author: Vicen»õiu Ciorbaru <vicentiu@mariadb.org>
diff --git a/storage/innobase/include/os0sync.h b/storage/innobase/include/os0sync.h
index 1cf4e9c..1abb774 100644
--- a/storage/innobase/include/os0sync.h
+++ b/storage/innobase/include/os0sync.h
@@ -492,7 +492,8 @@ inline
 lock_word_t
 os_atomic_clear(volatile lock_word_t* ptr)
 {
-	return(__sync_lock_test_and_set(ptr, 0));
+		__sync_lock_release(ptr);
+	return *ptr;
 }
 
 # elif defined(HAVE_IB_GCC_ATOMIC_TEST_AND_SET)
@@ -861,6 +862,7 @@ for synchronization */
 architecture. Disable memory barrier for Intel architecture for now. */
 # define os_rmb do { } while(0)
 # define os_wmb do { } while(0)
+# define os_mb  do { } while(0)
 # define os_isync do { } while(0)
 # define IB_MEMORY_BARRIER_STARTUP_MSG \
 	"Memory barrier is not used"
diff --git a/storage/innobase/include/sync0sync.ic b/storage/innobase/include/sync0sync.ic
index 55f728f..0b6858a 100644
--- a/storage/innobase/include/sync0sync.ic
+++ b/storage/innobase/include/sync0sync.ic
@@ -178,6 +178,8 @@ mutex_exit_func(
 	to wake up possible hanging threads if
 	they are missed in mutex_signal_object. */
 
+	os_mb;
+
 	if (mutex_get_waiters(mutex) != 0) {
 
 		mutex_signal_object(mutex);
diff --git a/storage/xtradb/include/os0sync.h b/storage/xtradb/include/os0sync.h
index 0f93f3f..2aa9478 100644
--- a/storage/xtradb/include/os0sync.h
+++ b/storage/xtradb/include/os0sync.h
@@ -543,7 +543,8 @@ inline
 lock_word_t
 os_atomic_clear(volatile lock_word_t* ptr)
 {
-	return(__sync_lock_test_and_set(ptr, 0));
+		__sync_lock_release(ptr);
+	return *ptr;
 }
 
 # elif defined(HAVE_IB_GCC_ATOMIC_TEST_AND_SET)
@@ -912,6 +913,7 @@ for synchronization */
 architecture. Disable memory barrier for Intel architecture for now. */
 # define os_rmb do { } while(0)
 # define os_wmb do { } while(0)
+# define os_mb  do { } while(0)
 # define os_isync do { } while(0)
 # define IB_MEMORY_BARRIER_STARTUP_MSG \
 	"Memory barrier is not used"
diff --git a/storage/xtradb/include/sync0sync.ic b/storage/xtradb/include/sync0sync.ic
index 00db854..fac83a4 100644
--- a/storage/xtradb/include/sync0sync.ic
+++ b/storage/xtradb/include/sync0sync.ic
@@ -181,6 +181,8 @@ mutex_exit_func(
 	to wake up possible hanging threads if
 	they are missed in mutex_signal_object. */
 
+	os_mb;
+
 	if (mutex_get_waiters(mutex) != 0) {
 
 		mutex_signal_object(mutex);
